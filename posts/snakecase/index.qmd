---
title: "snake_case vs Everything_Else"
author: "al"
date: "2024-05-07"
date_modified: "`r format(Sys.time(), '%Y-%m-%d')`"
format: 
  html:
    code-fold: true
categories: [names, news]
---

```{r setup, echo=TRUE, include = TRUE}
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, dpi=60, out.width = "100%")
options(scipen=999)
options(knitr.kable.NA = '--') #'--'
options(knitr.kable.NAN = '--')
```


Been preferring `snakecase` naming convention for all files and columns and variables for a long time for the following reasons:

1.  It's much easier to type. Reaching for the shift button is a pain.
2.  Arguably easier to read. I find it easier to read `snake_case` than `CamelCase`.
3.  Can make it easy to `name` things in a fashion that allows you to `r unlist(stringr::str_split("dissect_what_something_is", pattern = "_"))` by the way it is named and allows automatic sorting to group similar things together. This presentation by [Jenny Bryan](https://github.com/jennybc) is a good read - [https://speakerdeck.com/jennybc/how-to-name-files-the-sequel](https://speakerdeck.com/jennybc/how-to-name-files-the-sequel). 

```{r snake_vs_camel}
#| label: fig-snake_vs_camel
knitr::include_graphics("thumbnail.jpg")
```

Worth noting that `sometimes-rules-need-to-be-broken` sometimes such as when you are naming chunks in `Rmarkdown`. It breaks our `cross-references`.  

<br>


As we see here though - it doesn't matter in `Quarto` (ex. see @fig-snake_vs_camel) vs @fig-all).

```{r all}
#| label: fig-all
knitr::include_graphics("all.jpeg")
```

>"no names have an anonymous function".
>
>&nbsp;&nbsp;&nbsp;&nbsp;-[Michael Sumner](https://github.com/mdsumner)
